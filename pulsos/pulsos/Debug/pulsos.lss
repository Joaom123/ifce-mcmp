
pulsos.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000572  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005c6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000991  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000719  00000000  00000000  00001021  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a3  00000000  00000000  0000173a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  00001ae0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000433  00000000  00000000  00001bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003e5  00000000  00000000  00002027  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000240c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__vector_1>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 07 01 	call	0x20e	; 0x20e <main>
  78:	0c 94 b7 02 	jmp	0x56e	; 0x56e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <delay_ms>:
#include <util/delay.h>
#include <avr/interrupt.h>

void delay_ms(int tempo)
{
	for (int i = 0; i < tempo; i++) _delay_ms(1);
  80:	18 16       	cp	r1, r24
  82:	19 06       	cpc	r1, r25
  84:	6c f4       	brge	.+26     	; 0xa0 <delay_ms+0x20>
  86:	20 e0       	ldi	r18, 0x00	; 0
  88:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8a:	ef ec       	ldi	r30, 0xCF	; 207
  8c:	f7 e0       	ldi	r31, 0x07	; 7
  8e:	31 97       	sbiw	r30, 0x01	; 1
  90:	f1 f7       	brne	.-4      	; 0x8e <delay_ms+0xe>
  92:	00 c0       	rjmp	.+0      	; 0x94 <delay_ms+0x14>
  94:	00 00       	nop
  96:	2f 5f       	subi	r18, 0xFF	; 255
  98:	3f 4f       	sbci	r19, 0xFF	; 255
  9a:	82 17       	cp	r24, r18
  9c:	93 07       	cpc	r25, r19
  9e:	a9 f7       	brne	.-22     	; 0x8a <delay_ms+0xa>
  a0:	08 95       	ret

000000a2 <calculaTempo>:
/*
*Entrada: velocidade em km/h | distancia em metros
*Saida: variação de tempo em milissegundos
*/
int calculaTempo(int distancia, int velocidade)
{
  a2:	cf 92       	push	r12
  a4:	df 92       	push	r13
  a6:	ef 92       	push	r14
  a8:	ff 92       	push	r15
  aa:	cf 93       	push	r28
  ac:	df 93       	push	r29
  ae:	eb 01       	movw	r28, r22
	int variacaoDeTempo = (distancia*1000*3.6)/velocidade;
	return variacaoDeTempo;
  b0:	28 ee       	ldi	r18, 0xE8	; 232
  b2:	33 e0       	ldi	r19, 0x03	; 3
  b4:	ac 01       	movw	r20, r24
  b6:	42 9f       	mul	r20, r18
  b8:	c0 01       	movw	r24, r0
  ba:	43 9f       	mul	r20, r19
  bc:	90 0d       	add	r25, r0
  be:	52 9f       	mul	r21, r18
  c0:	90 0d       	add	r25, r0
  c2:	11 24       	eor	r1, r1
  c4:	bc 01       	movw	r22, r24
  c6:	99 0f       	add	r25, r25
  c8:	88 0b       	sbc	r24, r24
  ca:	99 0b       	sbc	r25, r25
  cc:	0e 94 be 01 	call	0x37c	; 0x37c <__floatsisf>
  d0:	26 e6       	ldi	r18, 0x66	; 102
  d2:	36 e6       	ldi	r19, 0x66	; 102
  d4:	46 e6       	ldi	r20, 0x66	; 102
  d6:	50 e4       	ldi	r21, 0x40	; 64
  d8:	0e 94 4a 02 	call	0x494	; 0x494 <__mulsf3>
  dc:	6b 01       	movw	r12, r22
  de:	7c 01       	movw	r14, r24
  e0:	be 01       	movw	r22, r28
  e2:	dd 0f       	add	r29, r29
  e4:	88 0b       	sbc	r24, r24
  e6:	99 0b       	sbc	r25, r25
  e8:	0e 94 be 01 	call	0x37c	; 0x37c <__floatsisf>
  ec:	9b 01       	movw	r18, r22
  ee:	ac 01       	movw	r20, r24
  f0:	c7 01       	movw	r24, r14
  f2:	b6 01       	movw	r22, r12
  f4:	0e 94 14 01 	call	0x228	; 0x228 <__divsf3>
  f8:	0e 94 86 01 	call	0x30c	; 0x30c <__fixsfsi>
}
  fc:	cb 01       	movw	r24, r22
  fe:	df 91       	pop	r29
 100:	cf 91       	pop	r28
 102:	ff 90       	pop	r15
 104:	ef 90       	pop	r14
 106:	df 90       	pop	r13
 108:	cf 90       	pop	r12
 10a:	08 95       	ret

0000010c <criaPulso>:
/*
*Entrada: número da porta em que haverá pulso
*/
void criaPulso(int numeroDaPorta)
{
	PORTB |= (1 << numeroDaPorta);
 10c:	45 b1       	in	r20, 0x05	; 5
 10e:	21 e0       	ldi	r18, 0x01	; 1
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	b9 01       	movw	r22, r18
 114:	02 c0       	rjmp	.+4      	; 0x11a <criaPulso+0xe>
 116:	66 0f       	add	r22, r22
 118:	77 1f       	adc	r23, r23
 11a:	8a 95       	dec	r24
 11c:	e2 f7       	brpl	.-8      	; 0x116 <criaPulso+0xa>
 11e:	cb 01       	movw	r24, r22
 120:	46 2b       	or	r20, r22
 122:	45 b9       	out	0x05, r20	; 5
	PORTB &= ~(1 << numeroDaPorta);
 124:	95 b1       	in	r25, 0x05	; 5
 126:	80 95       	com	r24
 128:	89 23       	and	r24, r25
 12a:	85 b9       	out	0x05, r24	; 5
 12c:	08 95       	ret

0000012e <enviaPulsos>:

/*
*Entrada: variação do tempo em milissegundos
*/
void enviaPulsos(int variacaoDeTempo)
{
 12e:	cf 93       	push	r28
 130:	df 93       	push	r29
 132:	ec 01       	movw	r28, r24
	criaPulso(0); //Pulso na porta B0
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 86 00 	call	0x10c	; 0x10c <criaPulso>
	delay_ms(variacaoDeTempo); //Espera tempo em ms
 13c:	ce 01       	movw	r24, r28
 13e:	0e 94 40 00 	call	0x80	; 0x80 <delay_ms>
	criaPulso(1); //Pulso na porta B1
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 86 00 	call	0x10c	; 0x10c <criaPulso>
}
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	08 95       	ret

00000150 <enviaDistancia>:
/*
*
*/
void enviaDistancia(int distancia)
{
	if(distancia == 5){
 150:	85 30       	cpi	r24, 0x05	; 5
 152:	91 05       	cpc	r25, r1
 154:	19 f4       	brne	.+6      	; 0x15c <enviaDistancia+0xc>
		PORTB |= (1 << PORTB4);
 156:	2c 9a       	sbi	0x05, 4	; 5
		PORTB |= (1 << PORTB5);
 158:	2d 9a       	sbi	0x05, 5	; 5
		return ;
 15a:	08 95       	ret
	} else if (distancia == 4){
 15c:	84 30       	cpi	r24, 0x04	; 4
 15e:	91 05       	cpc	r25, r1
 160:	19 f4       	brne	.+6      	; 0x168 <enviaDistancia+0x18>
		PORTB &= ~(1 << PORTB4);
 162:	2c 98       	cbi	0x05, 4	; 5
		PORTB |= (1 << PORTB5);
 164:	2d 9a       	sbi	0x05, 5	; 5
		return ;
 166:	08 95       	ret
	} else if(distancia == 3){
 168:	03 97       	sbiw	r24, 0x03	; 3
 16a:	19 f4       	brne	.+6      	; 0x172 <enviaDistancia+0x22>
		PORTB |= (1 << PORTB4);
 16c:	2c 9a       	sbi	0x05, 4	; 5
		PORTB &= ~(1 << PORTB5);
 16e:	2d 98       	cbi	0x05, 5	; 5
		return ;
 170:	08 95       	ret
	} else {
		PORTB &= ~(1 << PORTB4);
 172:	2c 98       	cbi	0x05, 4	; 5
		PORTB &= ~(1 << PORTB5);
 174:	2d 98       	cbi	0x05, 5	; 5
 176:	08 95       	ret

00000178 <enviaPulsosEDistancia>:
		return ;	
	}
}

void enviaPulsosEDistancia(int distacia, int velocidade)
{
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	ec 01       	movw	r28, r24
	enviaPulsos(calculaTempo(distacia, velocidade));
 17e:	0e 94 51 00 	call	0xa2	; 0xa2 <calculaTempo>
 182:	0e 94 97 00 	call	0x12e	; 0x12e <enviaPulsos>
	enviaDistancia(distacia);
 186:	ce 01       	movw	r24, r28
 188:	0e 94 a8 00 	call	0x150	; 0x150 <enviaDistancia>
	delay_ms(1000);
 18c:	88 ee       	ldi	r24, 0xE8	; 232
 18e:	93 e0       	ldi	r25, 0x03	; 3
 190:	0e 94 40 00 	call	0x80	; 0x80 <delay_ms>
}
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	08 95       	ret

0000019a <__vector_1>:

ISR(INT0_vect)
{
 19a:	1f 92       	push	r1
 19c:	0f 92       	push	r0
 19e:	0f b6       	in	r0, 0x3f	; 63
 1a0:	0f 92       	push	r0
 1a2:	11 24       	eor	r1, r1
 1a4:	2f 93       	push	r18
 1a6:	3f 93       	push	r19
 1a8:	4f 93       	push	r20
 1aa:	5f 93       	push	r21
 1ac:	6f 93       	push	r22
 1ae:	7f 93       	push	r23
 1b0:	8f 93       	push	r24
 1b2:	9f 93       	push	r25
 1b4:	af 93       	push	r26
 1b6:	bf 93       	push	r27
 1b8:	ef 93       	push	r30
 1ba:	ff 93       	push	r31
	enviaPulsosEDistancia(4,50);
 1bc:	62 e3       	ldi	r22, 0x32	; 50
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	84 e0       	ldi	r24, 0x04	; 4
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 bc 00 	call	0x178	; 0x178 <enviaPulsosEDistancia>
	enviaPulsosEDistancia(5,99);
 1c8:	63 e6       	ldi	r22, 0x63	; 99
 1ca:	70 e0       	ldi	r23, 0x00	; 0
 1cc:	85 e0       	ldi	r24, 0x05	; 5
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 bc 00 	call	0x178	; 0x178 <enviaPulsosEDistancia>
	enviaPulsosEDistancia(3,20);
 1d4:	64 e1       	ldi	r22, 0x14	; 20
 1d6:	70 e0       	ldi	r23, 0x00	; 0
 1d8:	83 e0       	ldi	r24, 0x03	; 3
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	0e 94 bc 00 	call	0x178	; 0x178 <enviaPulsosEDistancia>
	enviaPulsosEDistancia(4,56);
 1e0:	68 e3       	ldi	r22, 0x38	; 56
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	84 e0       	ldi	r24, 0x04	; 4
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 bc 00 	call	0x178	; 0x178 <enviaPulsosEDistancia>
}
 1ec:	ff 91       	pop	r31
 1ee:	ef 91       	pop	r30
 1f0:	bf 91       	pop	r27
 1f2:	af 91       	pop	r26
 1f4:	9f 91       	pop	r25
 1f6:	8f 91       	pop	r24
 1f8:	7f 91       	pop	r23
 1fa:	6f 91       	pop	r22
 1fc:	5f 91       	pop	r21
 1fe:	4f 91       	pop	r20
 200:	3f 91       	pop	r19
 202:	2f 91       	pop	r18
 204:	0f 90       	pop	r0
 206:	0f be       	out	0x3f, r0	; 63
 208:	0f 90       	pop	r0
 20a:	1f 90       	pop	r1
 20c:	18 95       	reti

0000020e <main>:

int main(void)
{
	DDRB = 0xff;
 20e:	8f ef       	ldi	r24, 0xFF	; 255
 210:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x00;
 212:	15 b8       	out	0x05, r1	; 5
	
	DDRD = 0x00;
 214:	1a b8       	out	0x0a, r1	; 10
	PORTD = 0x00;
 216:	1b b8       	out	0x0b, r1	; 11
	
	EICRA |= (1 << ISC01);		//Ativa registrador interrupção externa
 218:	e9 e6       	ldi	r30, 0x69	; 105
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	82 60       	ori	r24, 0x02	; 2
 220:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);		//Ativa interrupção de int0
 222:	e8 9a       	sbi	0x1d, 0	; 29
	
	sei();
 224:	78 94       	sei
 226:	ff cf       	rjmp	.-2      	; 0x226 <main+0x18>

00000228 <__divsf3>:
 228:	0e 94 28 01 	call	0x250	; 0x250 <__divsf3x>
 22c:	0c 94 10 02 	jmp	0x420	; 0x420 <__fp_round>
 230:	0e 94 09 02 	call	0x412	; 0x412 <__fp_pscB>
 234:	58 f0       	brcs	.+22     	; 0x24c <__divsf3+0x24>
 236:	0e 94 02 02 	call	0x404	; 0x404 <__fp_pscA>
 23a:	40 f0       	brcs	.+16     	; 0x24c <__divsf3+0x24>
 23c:	29 f4       	brne	.+10     	; 0x248 <__divsf3+0x20>
 23e:	5f 3f       	cpi	r21, 0xFF	; 255
 240:	29 f0       	breq	.+10     	; 0x24c <__divsf3+0x24>
 242:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_inf>
 246:	51 11       	cpse	r21, r1
 248:	0c 94 44 02 	jmp	0x488	; 0x488 <__fp_szero>
 24c:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__fp_nan>

00000250 <__divsf3x>:
 250:	0e 94 21 02 	call	0x442	; 0x442 <__fp_split3>
 254:	68 f3       	brcs	.-38     	; 0x230 <__divsf3+0x8>

00000256 <__divsf3_pse>:
 256:	99 23       	and	r25, r25
 258:	b1 f3       	breq	.-20     	; 0x246 <__divsf3+0x1e>
 25a:	55 23       	and	r21, r21
 25c:	91 f3       	breq	.-28     	; 0x242 <__divsf3+0x1a>
 25e:	95 1b       	sub	r25, r21
 260:	55 0b       	sbc	r21, r21
 262:	bb 27       	eor	r27, r27
 264:	aa 27       	eor	r26, r26
 266:	62 17       	cp	r22, r18
 268:	73 07       	cpc	r23, r19
 26a:	84 07       	cpc	r24, r20
 26c:	38 f0       	brcs	.+14     	; 0x27c <__divsf3_pse+0x26>
 26e:	9f 5f       	subi	r25, 0xFF	; 255
 270:	5f 4f       	sbci	r21, 0xFF	; 255
 272:	22 0f       	add	r18, r18
 274:	33 1f       	adc	r19, r19
 276:	44 1f       	adc	r20, r20
 278:	aa 1f       	adc	r26, r26
 27a:	a9 f3       	breq	.-22     	; 0x266 <__divsf3_pse+0x10>
 27c:	35 d0       	rcall	.+106    	; 0x2e8 <__divsf3_pse+0x92>
 27e:	0e 2e       	mov	r0, r30
 280:	3a f0       	brmi	.+14     	; 0x290 <__divsf3_pse+0x3a>
 282:	e0 e8       	ldi	r30, 0x80	; 128
 284:	32 d0       	rcall	.+100    	; 0x2ea <__divsf3_pse+0x94>
 286:	91 50       	subi	r25, 0x01	; 1
 288:	50 40       	sbci	r21, 0x00	; 0
 28a:	e6 95       	lsr	r30
 28c:	00 1c       	adc	r0, r0
 28e:	ca f7       	brpl	.-14     	; 0x282 <__divsf3_pse+0x2c>
 290:	2b d0       	rcall	.+86     	; 0x2e8 <__divsf3_pse+0x92>
 292:	fe 2f       	mov	r31, r30
 294:	29 d0       	rcall	.+82     	; 0x2e8 <__divsf3_pse+0x92>
 296:	66 0f       	add	r22, r22
 298:	77 1f       	adc	r23, r23
 29a:	88 1f       	adc	r24, r24
 29c:	bb 1f       	adc	r27, r27
 29e:	26 17       	cp	r18, r22
 2a0:	37 07       	cpc	r19, r23
 2a2:	48 07       	cpc	r20, r24
 2a4:	ab 07       	cpc	r26, r27
 2a6:	b0 e8       	ldi	r27, 0x80	; 128
 2a8:	09 f0       	breq	.+2      	; 0x2ac <__divsf3_pse+0x56>
 2aa:	bb 0b       	sbc	r27, r27
 2ac:	80 2d       	mov	r24, r0
 2ae:	bf 01       	movw	r22, r30
 2b0:	ff 27       	eor	r31, r31
 2b2:	93 58       	subi	r25, 0x83	; 131
 2b4:	5f 4f       	sbci	r21, 0xFF	; 255
 2b6:	3a f0       	brmi	.+14     	; 0x2c6 <__divsf3_pse+0x70>
 2b8:	9e 3f       	cpi	r25, 0xFE	; 254
 2ba:	51 05       	cpc	r21, r1
 2bc:	78 f0       	brcs	.+30     	; 0x2dc <__divsf3_pse+0x86>
 2be:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_inf>
 2c2:	0c 94 44 02 	jmp	0x488	; 0x488 <__fp_szero>
 2c6:	5f 3f       	cpi	r21, 0xFF	; 255
 2c8:	e4 f3       	brlt	.-8      	; 0x2c2 <__divsf3_pse+0x6c>
 2ca:	98 3e       	cpi	r25, 0xE8	; 232
 2cc:	d4 f3       	brlt	.-12     	; 0x2c2 <__divsf3_pse+0x6c>
 2ce:	86 95       	lsr	r24
 2d0:	77 95       	ror	r23
 2d2:	67 95       	ror	r22
 2d4:	b7 95       	ror	r27
 2d6:	f7 95       	ror	r31
 2d8:	9f 5f       	subi	r25, 0xFF	; 255
 2da:	c9 f7       	brne	.-14     	; 0x2ce <__divsf3_pse+0x78>
 2dc:	88 0f       	add	r24, r24
 2de:	91 1d       	adc	r25, r1
 2e0:	96 95       	lsr	r25
 2e2:	87 95       	ror	r24
 2e4:	97 f9       	bld	r25, 7
 2e6:	08 95       	ret
 2e8:	e1 e0       	ldi	r30, 0x01	; 1
 2ea:	66 0f       	add	r22, r22
 2ec:	77 1f       	adc	r23, r23
 2ee:	88 1f       	adc	r24, r24
 2f0:	bb 1f       	adc	r27, r27
 2f2:	62 17       	cp	r22, r18
 2f4:	73 07       	cpc	r23, r19
 2f6:	84 07       	cpc	r24, r20
 2f8:	ba 07       	cpc	r27, r26
 2fa:	20 f0       	brcs	.+8      	; 0x304 <__divsf3_pse+0xae>
 2fc:	62 1b       	sub	r22, r18
 2fe:	73 0b       	sbc	r23, r19
 300:	84 0b       	sbc	r24, r20
 302:	ba 0b       	sbc	r27, r26
 304:	ee 1f       	adc	r30, r30
 306:	88 f7       	brcc	.-30     	; 0x2ea <__divsf3_pse+0x94>
 308:	e0 95       	com	r30
 30a:	08 95       	ret

0000030c <__fixsfsi>:
 30c:	0e 94 8d 01 	call	0x31a	; 0x31a <__fixunssfsi>
 310:	68 94       	set
 312:	b1 11       	cpse	r27, r1
 314:	0c 94 44 02 	jmp	0x488	; 0x488 <__fp_szero>
 318:	08 95       	ret

0000031a <__fixunssfsi>:
 31a:	0e 94 29 02 	call	0x452	; 0x452 <__fp_splitA>
 31e:	88 f0       	brcs	.+34     	; 0x342 <__fixunssfsi+0x28>
 320:	9f 57       	subi	r25, 0x7F	; 127
 322:	98 f0       	brcs	.+38     	; 0x34a <__fixunssfsi+0x30>
 324:	b9 2f       	mov	r27, r25
 326:	99 27       	eor	r25, r25
 328:	b7 51       	subi	r27, 0x17	; 23
 32a:	b0 f0       	brcs	.+44     	; 0x358 <__fixunssfsi+0x3e>
 32c:	e1 f0       	breq	.+56     	; 0x366 <__fixunssfsi+0x4c>
 32e:	66 0f       	add	r22, r22
 330:	77 1f       	adc	r23, r23
 332:	88 1f       	adc	r24, r24
 334:	99 1f       	adc	r25, r25
 336:	1a f0       	brmi	.+6      	; 0x33e <__fixunssfsi+0x24>
 338:	ba 95       	dec	r27
 33a:	c9 f7       	brne	.-14     	; 0x32e <__fixunssfsi+0x14>
 33c:	14 c0       	rjmp	.+40     	; 0x366 <__fixunssfsi+0x4c>
 33e:	b1 30       	cpi	r27, 0x01	; 1
 340:	91 f0       	breq	.+36     	; 0x366 <__fixunssfsi+0x4c>
 342:	0e 94 43 02 	call	0x486	; 0x486 <__fp_zero>
 346:	b1 e0       	ldi	r27, 0x01	; 1
 348:	08 95       	ret
 34a:	0c 94 43 02 	jmp	0x486	; 0x486 <__fp_zero>
 34e:	67 2f       	mov	r22, r23
 350:	78 2f       	mov	r23, r24
 352:	88 27       	eor	r24, r24
 354:	b8 5f       	subi	r27, 0xF8	; 248
 356:	39 f0       	breq	.+14     	; 0x366 <__fixunssfsi+0x4c>
 358:	b9 3f       	cpi	r27, 0xF9	; 249
 35a:	cc f3       	brlt	.-14     	; 0x34e <__fixunssfsi+0x34>
 35c:	86 95       	lsr	r24
 35e:	77 95       	ror	r23
 360:	67 95       	ror	r22
 362:	b3 95       	inc	r27
 364:	d9 f7       	brne	.-10     	; 0x35c <__fixunssfsi+0x42>
 366:	3e f4       	brtc	.+14     	; 0x376 <__fixunssfsi+0x5c>
 368:	90 95       	com	r25
 36a:	80 95       	com	r24
 36c:	70 95       	com	r23
 36e:	61 95       	neg	r22
 370:	7f 4f       	sbci	r23, 0xFF	; 255
 372:	8f 4f       	sbci	r24, 0xFF	; 255
 374:	9f 4f       	sbci	r25, 0xFF	; 255
 376:	08 95       	ret

00000378 <__floatunsisf>:
 378:	e8 94       	clt
 37a:	09 c0       	rjmp	.+18     	; 0x38e <__floatsisf+0x12>

0000037c <__floatsisf>:
 37c:	97 fb       	bst	r25, 7
 37e:	3e f4       	brtc	.+14     	; 0x38e <__floatsisf+0x12>
 380:	90 95       	com	r25
 382:	80 95       	com	r24
 384:	70 95       	com	r23
 386:	61 95       	neg	r22
 388:	7f 4f       	sbci	r23, 0xFF	; 255
 38a:	8f 4f       	sbci	r24, 0xFF	; 255
 38c:	9f 4f       	sbci	r25, 0xFF	; 255
 38e:	99 23       	and	r25, r25
 390:	a9 f0       	breq	.+42     	; 0x3bc <__floatsisf+0x40>
 392:	f9 2f       	mov	r31, r25
 394:	96 e9       	ldi	r25, 0x96	; 150
 396:	bb 27       	eor	r27, r27
 398:	93 95       	inc	r25
 39a:	f6 95       	lsr	r31
 39c:	87 95       	ror	r24
 39e:	77 95       	ror	r23
 3a0:	67 95       	ror	r22
 3a2:	b7 95       	ror	r27
 3a4:	f1 11       	cpse	r31, r1
 3a6:	f8 cf       	rjmp	.-16     	; 0x398 <__floatsisf+0x1c>
 3a8:	fa f4       	brpl	.+62     	; 0x3e8 <__floatsisf+0x6c>
 3aa:	bb 0f       	add	r27, r27
 3ac:	11 f4       	brne	.+4      	; 0x3b2 <__floatsisf+0x36>
 3ae:	60 ff       	sbrs	r22, 0
 3b0:	1b c0       	rjmp	.+54     	; 0x3e8 <__floatsisf+0x6c>
 3b2:	6f 5f       	subi	r22, 0xFF	; 255
 3b4:	7f 4f       	sbci	r23, 0xFF	; 255
 3b6:	8f 4f       	sbci	r24, 0xFF	; 255
 3b8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ba:	16 c0       	rjmp	.+44     	; 0x3e8 <__floatsisf+0x6c>
 3bc:	88 23       	and	r24, r24
 3be:	11 f0       	breq	.+4      	; 0x3c4 <__floatsisf+0x48>
 3c0:	96 e9       	ldi	r25, 0x96	; 150
 3c2:	11 c0       	rjmp	.+34     	; 0x3e6 <__floatsisf+0x6a>
 3c4:	77 23       	and	r23, r23
 3c6:	21 f0       	breq	.+8      	; 0x3d0 <__floatsisf+0x54>
 3c8:	9e e8       	ldi	r25, 0x8E	; 142
 3ca:	87 2f       	mov	r24, r23
 3cc:	76 2f       	mov	r23, r22
 3ce:	05 c0       	rjmp	.+10     	; 0x3da <__floatsisf+0x5e>
 3d0:	66 23       	and	r22, r22
 3d2:	71 f0       	breq	.+28     	; 0x3f0 <__floatsisf+0x74>
 3d4:	96 e8       	ldi	r25, 0x86	; 134
 3d6:	86 2f       	mov	r24, r22
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	60 e0       	ldi	r22, 0x00	; 0
 3dc:	2a f0       	brmi	.+10     	; 0x3e8 <__floatsisf+0x6c>
 3de:	9a 95       	dec	r25
 3e0:	66 0f       	add	r22, r22
 3e2:	77 1f       	adc	r23, r23
 3e4:	88 1f       	adc	r24, r24
 3e6:	da f7       	brpl	.-10     	; 0x3de <__floatsisf+0x62>
 3e8:	88 0f       	add	r24, r24
 3ea:	96 95       	lsr	r25
 3ec:	87 95       	ror	r24
 3ee:	97 f9       	bld	r25, 7
 3f0:	08 95       	ret

000003f2 <__fp_inf>:
 3f2:	97 f9       	bld	r25, 7
 3f4:	9f 67       	ori	r25, 0x7F	; 127
 3f6:	80 e8       	ldi	r24, 0x80	; 128
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	60 e0       	ldi	r22, 0x00	; 0
 3fc:	08 95       	ret

000003fe <__fp_nan>:
 3fe:	9f ef       	ldi	r25, 0xFF	; 255
 400:	80 ec       	ldi	r24, 0xC0	; 192
 402:	08 95       	ret

00000404 <__fp_pscA>:
 404:	00 24       	eor	r0, r0
 406:	0a 94       	dec	r0
 408:	16 16       	cp	r1, r22
 40a:	17 06       	cpc	r1, r23
 40c:	18 06       	cpc	r1, r24
 40e:	09 06       	cpc	r0, r25
 410:	08 95       	ret

00000412 <__fp_pscB>:
 412:	00 24       	eor	r0, r0
 414:	0a 94       	dec	r0
 416:	12 16       	cp	r1, r18
 418:	13 06       	cpc	r1, r19
 41a:	14 06       	cpc	r1, r20
 41c:	05 06       	cpc	r0, r21
 41e:	08 95       	ret

00000420 <__fp_round>:
 420:	09 2e       	mov	r0, r25
 422:	03 94       	inc	r0
 424:	00 0c       	add	r0, r0
 426:	11 f4       	brne	.+4      	; 0x42c <__fp_round+0xc>
 428:	88 23       	and	r24, r24
 42a:	52 f0       	brmi	.+20     	; 0x440 <__fp_round+0x20>
 42c:	bb 0f       	add	r27, r27
 42e:	40 f4       	brcc	.+16     	; 0x440 <__fp_round+0x20>
 430:	bf 2b       	or	r27, r31
 432:	11 f4       	brne	.+4      	; 0x438 <__fp_round+0x18>
 434:	60 ff       	sbrs	r22, 0
 436:	04 c0       	rjmp	.+8      	; 0x440 <__fp_round+0x20>
 438:	6f 5f       	subi	r22, 0xFF	; 255
 43a:	7f 4f       	sbci	r23, 0xFF	; 255
 43c:	8f 4f       	sbci	r24, 0xFF	; 255
 43e:	9f 4f       	sbci	r25, 0xFF	; 255
 440:	08 95       	ret

00000442 <__fp_split3>:
 442:	57 fd       	sbrc	r21, 7
 444:	90 58       	subi	r25, 0x80	; 128
 446:	44 0f       	add	r20, r20
 448:	55 1f       	adc	r21, r21
 44a:	59 f0       	breq	.+22     	; 0x462 <__fp_splitA+0x10>
 44c:	5f 3f       	cpi	r21, 0xFF	; 255
 44e:	71 f0       	breq	.+28     	; 0x46c <__fp_splitA+0x1a>
 450:	47 95       	ror	r20

00000452 <__fp_splitA>:
 452:	88 0f       	add	r24, r24
 454:	97 fb       	bst	r25, 7
 456:	99 1f       	adc	r25, r25
 458:	61 f0       	breq	.+24     	; 0x472 <__fp_splitA+0x20>
 45a:	9f 3f       	cpi	r25, 0xFF	; 255
 45c:	79 f0       	breq	.+30     	; 0x47c <__fp_splitA+0x2a>
 45e:	87 95       	ror	r24
 460:	08 95       	ret
 462:	12 16       	cp	r1, r18
 464:	13 06       	cpc	r1, r19
 466:	14 06       	cpc	r1, r20
 468:	55 1f       	adc	r21, r21
 46a:	f2 cf       	rjmp	.-28     	; 0x450 <__fp_split3+0xe>
 46c:	46 95       	lsr	r20
 46e:	f1 df       	rcall	.-30     	; 0x452 <__fp_splitA>
 470:	08 c0       	rjmp	.+16     	; 0x482 <__fp_splitA+0x30>
 472:	16 16       	cp	r1, r22
 474:	17 06       	cpc	r1, r23
 476:	18 06       	cpc	r1, r24
 478:	99 1f       	adc	r25, r25
 47a:	f1 cf       	rjmp	.-30     	; 0x45e <__fp_splitA+0xc>
 47c:	86 95       	lsr	r24
 47e:	71 05       	cpc	r23, r1
 480:	61 05       	cpc	r22, r1
 482:	08 94       	sec
 484:	08 95       	ret

00000486 <__fp_zero>:
 486:	e8 94       	clt

00000488 <__fp_szero>:
 488:	bb 27       	eor	r27, r27
 48a:	66 27       	eor	r22, r22
 48c:	77 27       	eor	r23, r23
 48e:	cb 01       	movw	r24, r22
 490:	97 f9       	bld	r25, 7
 492:	08 95       	ret

00000494 <__mulsf3>:
 494:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__mulsf3x>
 498:	0c 94 10 02 	jmp	0x420	; 0x420 <__fp_round>
 49c:	0e 94 02 02 	call	0x404	; 0x404 <__fp_pscA>
 4a0:	38 f0       	brcs	.+14     	; 0x4b0 <__mulsf3+0x1c>
 4a2:	0e 94 09 02 	call	0x412	; 0x412 <__fp_pscB>
 4a6:	20 f0       	brcs	.+8      	; 0x4b0 <__mulsf3+0x1c>
 4a8:	95 23       	and	r25, r21
 4aa:	11 f0       	breq	.+4      	; 0x4b0 <__mulsf3+0x1c>
 4ac:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_inf>
 4b0:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__fp_nan>
 4b4:	11 24       	eor	r1, r1
 4b6:	0c 94 44 02 	jmp	0x488	; 0x488 <__fp_szero>

000004ba <__mulsf3x>:
 4ba:	0e 94 21 02 	call	0x442	; 0x442 <__fp_split3>
 4be:	70 f3       	brcs	.-36     	; 0x49c <__mulsf3+0x8>

000004c0 <__mulsf3_pse>:
 4c0:	95 9f       	mul	r25, r21
 4c2:	c1 f3       	breq	.-16     	; 0x4b4 <__mulsf3+0x20>
 4c4:	95 0f       	add	r25, r21
 4c6:	50 e0       	ldi	r21, 0x00	; 0
 4c8:	55 1f       	adc	r21, r21
 4ca:	62 9f       	mul	r22, r18
 4cc:	f0 01       	movw	r30, r0
 4ce:	72 9f       	mul	r23, r18
 4d0:	bb 27       	eor	r27, r27
 4d2:	f0 0d       	add	r31, r0
 4d4:	b1 1d       	adc	r27, r1
 4d6:	63 9f       	mul	r22, r19
 4d8:	aa 27       	eor	r26, r26
 4da:	f0 0d       	add	r31, r0
 4dc:	b1 1d       	adc	r27, r1
 4de:	aa 1f       	adc	r26, r26
 4e0:	64 9f       	mul	r22, r20
 4e2:	66 27       	eor	r22, r22
 4e4:	b0 0d       	add	r27, r0
 4e6:	a1 1d       	adc	r26, r1
 4e8:	66 1f       	adc	r22, r22
 4ea:	82 9f       	mul	r24, r18
 4ec:	22 27       	eor	r18, r18
 4ee:	b0 0d       	add	r27, r0
 4f0:	a1 1d       	adc	r26, r1
 4f2:	62 1f       	adc	r22, r18
 4f4:	73 9f       	mul	r23, r19
 4f6:	b0 0d       	add	r27, r0
 4f8:	a1 1d       	adc	r26, r1
 4fa:	62 1f       	adc	r22, r18
 4fc:	83 9f       	mul	r24, r19
 4fe:	a0 0d       	add	r26, r0
 500:	61 1d       	adc	r22, r1
 502:	22 1f       	adc	r18, r18
 504:	74 9f       	mul	r23, r20
 506:	33 27       	eor	r19, r19
 508:	a0 0d       	add	r26, r0
 50a:	61 1d       	adc	r22, r1
 50c:	23 1f       	adc	r18, r19
 50e:	84 9f       	mul	r24, r20
 510:	60 0d       	add	r22, r0
 512:	21 1d       	adc	r18, r1
 514:	82 2f       	mov	r24, r18
 516:	76 2f       	mov	r23, r22
 518:	6a 2f       	mov	r22, r26
 51a:	11 24       	eor	r1, r1
 51c:	9f 57       	subi	r25, 0x7F	; 127
 51e:	50 40       	sbci	r21, 0x00	; 0
 520:	9a f0       	brmi	.+38     	; 0x548 <__mulsf3_pse+0x88>
 522:	f1 f0       	breq	.+60     	; 0x560 <__mulsf3_pse+0xa0>
 524:	88 23       	and	r24, r24
 526:	4a f0       	brmi	.+18     	; 0x53a <__mulsf3_pse+0x7a>
 528:	ee 0f       	add	r30, r30
 52a:	ff 1f       	adc	r31, r31
 52c:	bb 1f       	adc	r27, r27
 52e:	66 1f       	adc	r22, r22
 530:	77 1f       	adc	r23, r23
 532:	88 1f       	adc	r24, r24
 534:	91 50       	subi	r25, 0x01	; 1
 536:	50 40       	sbci	r21, 0x00	; 0
 538:	a9 f7       	brne	.-22     	; 0x524 <__mulsf3_pse+0x64>
 53a:	9e 3f       	cpi	r25, 0xFE	; 254
 53c:	51 05       	cpc	r21, r1
 53e:	80 f0       	brcs	.+32     	; 0x560 <__mulsf3_pse+0xa0>
 540:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_inf>
 544:	0c 94 44 02 	jmp	0x488	; 0x488 <__fp_szero>
 548:	5f 3f       	cpi	r21, 0xFF	; 255
 54a:	e4 f3       	brlt	.-8      	; 0x544 <__mulsf3_pse+0x84>
 54c:	98 3e       	cpi	r25, 0xE8	; 232
 54e:	d4 f3       	brlt	.-12     	; 0x544 <__mulsf3_pse+0x84>
 550:	86 95       	lsr	r24
 552:	77 95       	ror	r23
 554:	67 95       	ror	r22
 556:	b7 95       	ror	r27
 558:	f7 95       	ror	r31
 55a:	e7 95       	ror	r30
 55c:	9f 5f       	subi	r25, 0xFF	; 255
 55e:	c1 f7       	brne	.-16     	; 0x550 <__mulsf3_pse+0x90>
 560:	fe 2b       	or	r31, r30
 562:	88 0f       	add	r24, r24
 564:	91 1d       	adc	r25, r1
 566:	96 95       	lsr	r25
 568:	87 95       	ror	r24
 56a:	97 f9       	bld	r25, 7
 56c:	08 95       	ret

0000056e <_exit>:
 56e:	f8 94       	cli

00000570 <__stop_program>:
 570:	ff cf       	rjmp	.-2      	; 0x570 <__stop_program>
